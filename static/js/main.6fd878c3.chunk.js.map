{"version":3,"sources":["components/validators/validators.ts","components/navbar/Navbar.tsx","components/preloader/830.png","components/preloader/Preloader.tsx","components/users/man-icon.png","components/button/Button.tsx","components/formControl/CreateField.tsx","components/profile/ProfileDataForm.tsx","components/profile/ProfileStatus.tsx","components/profile/ProfileInfo.tsx","components/api/api.ts","components/api/profile-api.ts","components/redux/profileReducer.ts","components/profile/Profile.tsx","components/home/Home.tsx","components/api/auth-api.ts","components/api/security-api.ts","components/redux/authReducer.ts","components/login/Login.tsx","components/redux/appReducer.ts","components/header/react-redux.png","components/header/Header.tsx","components/api/users-api.ts","components/redux/usersReducer.ts","components/users/Pagination.tsx","components/users/User.tsx","components/users/UsersSearchForm.tsx","components/users/UsersHook.tsx","components/chat/Chat.tsx","components/app/App.tsx","components/redux/store.ts","index.tsx","components/users/paginator.module.css"],"names":["max","min","Navbar","className","to","activeClassName","Preloader","src","loader","alt","Button","title","onClick","disabled","CreateField","input","label","type","meta","touched","error","warning","placeholder","ProfileReduxFormData","reduxForm","form","handleSubmit","profile","onSubmit","Field","name","component","Object","keys","contacts","map","key","ProfileStatus","state","editMod","status","props","activateAditMod","setState","deActivateAditMod","updateUserStatus","onInputChange","e","target","value","prevProps","this","onBlur","autoFocus","defaultValue","onChange","Component","ProfileData","isOwner","goToEditMod","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","useState","setEditMod","photos","large","ava","htmlFor","id","files","length","initialValues","formData","then","instance","axios","create","withCredentials","baseURL","headers","profileAPI","userId","get","response","data","put","filePhoto","FormData","append","initialState","actions","payload","getUserProfile","dispatch","a","profileReducer","action","Profile","profileRefresh","match","params","authUserId","history","push","getUserStatus","React","compose","withRouter","connect","profilePage","auth","resultCode","file","getState","Error","stopSubmit","_error","messages","Promise","reject","Home","required","undefined","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","login","isAuth","captchaUrl","getUserAuthData","logOutUser","getCaptchaUrl","url","authReducer","Login","useDispatch","useSelector","LoginReduxForm","values","passward","message","maxLength25","minlength4","validate","initialization","appReducer","Header","logo","usersAPI","currentPage","pageSize","term","friend","users","totalUsersCount","isFetching","followingProgress","filter","getUsers","totalCount","items","usersReducer","user","followed","Pagination","onPageChange","portionSize","pageCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","style","paginator","p","page","pageNumber","User","some","UsersSearchForm","setSubmitting","onFilterChange","isSubmitting","as","UsersHook","usersPage","useHistory","useEffect","pathname","search","u","Chat","ChatContainer","ws","setWs","wsChanel","handlerWs","console","log","setTimeout","CreateChanel","addEventListener","close","WebSocket","removeEventListener","Messages","wsData","setWsData","messageHandler","newData","JSON","parse","prevData","height","overflow","padding","m","Message","photo","width","userName","AddMessageChat","setMessage","readyStatus","setReadyStatus","openHandler","currentTarget","send","App","initializationApp","exact","path","app","promise","all","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6fd878c3.chunk.js","sourcesContent":[" type ValidateType = (value:string)=>string | undefined\r\nexport const required: ValidateType = (value) => (value ? undefined : \"Required\");\r\n\r\nexport const maxLength = (max:number): ValidateType => (value) =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\nexport const minLength = (min:number): ValidateType => (value) =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\n","import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FC } from \"react\";\r\n\r\nconst Navbar:FC = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/home\" activeClassName=\"active\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/users\" activeClassName=\"active\">\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/profile\" activeClassName=\"active\">\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/chat\" activeClassName=\"active\">\r\n            Chat\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/login\" activeClassName=\"active\">\r\n            Login\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/830.38a5c8dd.png\";","import React from 'react';\r\nimport { FC } from 'react';\r\nimport loader from './830.png'\r\nimport \"./preloader.css\"\r\n\r\nconst Preloader:FC = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <img src={loader} alt=\"img\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n","export default __webpack_public_path__ + \"static/media/man-icon.cc23b0e9.png\";","import React from \"react\";\r\nimport \"./button.css\";\r\ntype ButtonType={\r\n  title:string\r\n  disabled:boolean\r\n  onClick?:()=>void\r\n}\r\nconst Button: React.FC<ButtonType> = ({ title, onClick, disabled }) => {\r\n  return (\r\n    <div className=\"button\">\r\n      <button onClick={onClick} disabled={disabled}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { WrappedFieldsProps } from \"redux-form\";\r\nimport \"./field.css\";\r\ntype CreateFieldType={\r\n  label:string\r\n  type:string\r\n\r\n}\r\nconst CreateField: React.FC<WrappedFieldsProps & CreateFieldType> = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning },\r\n  \r\n}) => {\r\n  return (\r\n    <div className=\"field\">\r\n      <label>{<b>{label}</b>}</label>\r\n      <div>\r\n        <input {...input} placeholder={label} type={type} />\r\n        {touched &&\r\n          ((error && <span className=\"error\">{error}</span>) ||\r\n            (warning && <span className=\"error\">{warning}</span>))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateField;\r\n","import React, { FC } from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport Button from \"../button/Button\";\r\nimport CreateField from \"../formControl/CreateField\";\r\nimport \"./profile.css\";\r\nimport \"../formControl/field.css\";\r\nimport { GetProfileType } from \"../redux/profileReducer\";\r\n\r\ntype PropsType={\r\n  profile:GetProfileType\r\n}\r\n\r\nconst ProfileDataForm: FC<InjectedFormProps<GetProfileType, PropsType> \r\n  & PropsType > = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-data\">\r\n      {error && <span className=\"error\">{error}</span>}\r\n      <div className=\"buttonSave\">\r\n        <Button disabled={false} title=\"Save\" />\r\n      </div>\r\n      <Field name=\"fullName\" component={CreateField} label=\"full name\" />\r\n      <Field name=\"aboutMe\" component={CreateField} label=\"about me\" />\r\n      {Object.keys(profile.contacts).map((key) => {\r\n        return (\r\n          <Field\r\n            key={key}\r\n            name={\"contacts.\" + key}\r\n            component={CreateField}\r\n            label={key}\r\n          />\r\n        );\r\n      })}\r\n      <label>\r\n        <div>\r\n          <b>My professional skills</b>\r\n        </div>\r\n        <Field name=\"looking for a job description\" component=\"textarea\" />\r\n      </label>\r\n      <Field\r\n        name=\"lookingForAJob\"\r\n        component={CreateField}\r\n        label=\"looking for a job\"\r\n        type=\"checkbox\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\nconst ProfileReduxFormData = reduxForm<GetProfileType, PropsType>({\r\n  form: \"profile-data\",\r\n})(ProfileDataForm);\r\nexport default ProfileReduxFormData;\r\n","import React, { ChangeEvent, Component } from \"react\";\r\nimport \"./profile.css\";\r\ntype PropsType={\r\n  status:string\r\n  updateUserStatus:(status:string)=>void\r\n}\r\nclass ProfileStatus extends Component<PropsType> {\r\n  state = {\r\n    editMod: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activateAditMod = () => {\r\n    this.setState({\r\n      editMod: true,\r\n    });\r\n  };\r\n  deActivateAditMod = () => {\r\n    this.setState({\r\n      editMod: false,\r\n    });\r\n    this.props.updateUserStatus(this.state.status);\r\n  };\r\n  onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      status: e.target.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { editMod, status } = this.state;\r\n    return (\r\n      <div className=\"status-container\">\r\n        {!editMod && (\r\n          <div className=\"status\" onClick={this.activateAditMod}>\r\n            <h3>Status: </h3>\r\n            <span>{status}</span>\r\n          </div>\r\n        )}\r\n        {editMod && (\r\n          <div>\r\n            <input\r\n              onBlur={this.deActivateAditMod}\r\n              autoFocus={true}\r\n              defaultValue={this.props.status}\r\n              onChange={this.onInputChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { ChangeEvent,  FC, useState } from \"react\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport ava from \"../users/man-icon.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport \"./profile.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport Button from \"../button/Button\";\r\nimport { ContactsType, GetProfileType } from \"../redux/profileReducer\";\r\n\r\n\r\ntype PropsType = {\r\n  profile: GetProfileType | null\r\n  isOwner: boolean\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: GetProfileType) => Promise<any>\r\n  status: string \r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = ({\r\n  profile,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n  status,\r\n  updateUserStatus,\r\n}) => {\r\n  const [editMod, setEditMod] = useState(false);\r\n  const goToEditMod = () => {\r\n    setEditMod(true);\r\n  };\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData: GetProfileType) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMod(false);\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"info-container\">\r\n      <div className=\"file\">\r\n        <img src={profile.photos.large || ava} alt=\"\" />\r\n        <div>\r\n          {isOwner && (\r\n            <label htmlFor=\"file\" className=\"label\">\r\n              Change avatar\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                className=\"input-file\"\r\n                onChange={onMainPhotoChange}\r\n              />\r\n            </label>\r\n          )}\r\n        </div>\r\n        <ProfileStatus status={status} updateUserStatus={updateUserStatus} />\r\n      </div>\r\n      <div className=\"file\">\r\n        {editMod ? (\r\n          <ProfileDataForm\r\n            initialValues={profile}\r\n            profile={profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            goToEditMod={goToEditMod}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\ntype ProfileDataType = {\r\n  profile: GetProfileType\r\n  isOwner: boolean\r\n  goToEditMod: () => void\r\n}\r\nconst ProfileData: FC<ProfileDataType> = ({ profile, isOwner, goToEditMod }) => {\r\n  return (\r\n    <div className=\"data-container\">\r\n      {isOwner && (\r\n        <div>\r\n          <Button disabled={false} title=\"Edit\" onClick={goToEditMod} />\r\n        </div>\r\n      )}\r\n      <div>\r\n        <h4>\r\n          Full name: <span>{profile.fullName}</span>\r\n        </h4>\r\n      </div>\r\n      <div>\r\n        <h4>\r\n          Looking for a job:{\" \"}\r\n          <span> {profile.lookingForAJob ? \"yes\" : \"no\"}</span>\r\n        </h4>\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <h4>\r\n            My professional skills:\r\n            <span> {profile.lookingForAJobDescription} </span>\r\n          </h4>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <h4>\r\n          About me: <span> {profile.aboutMe}</span>{\" \"}\r\n        </h4>\r\n      </div>\r\n      <div>\r\n        <h3>Contacts</h3>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key as keyof ContactsType]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\ntype ContactType = {\r\n  contactTitle: string\r\n  contactValue: string\r\n}\r\nconst Contact: FC<ContactType> = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <h4>\r\n        {contactTitle}: <span> {contactValue}</span>\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import axios from \"axios\";\r\nimport { UsersItemType } from \"../redux/usersReducer\";\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"6a776457-e59e-482f-ba70-10ff93f7c513\",\r\n  },\r\n});\r\nexport type ResponseDataType<D = {}> = {\r\n  data: D\r\n  resultCode: number\r\n  messages: Array<string>\r\n\r\n}\r\nexport type GetUsersType = {\r\n  items: Array<UsersItemType>\r\n  totalCount: number\r\n  error: string | null\r\n}\r\n","import { GetProfileType, PhotosType } from \"../redux/profileReducer\";\r\nimport { instance, ResponseDataType } from \"./api\";\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<GetProfileType>(`profile/` + userId).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(response => response.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseDataType>(`profile/status`, { status: status }).then(response => response.data)\r\n    },\r\n    saveProfile(profile: GetProfileType) {\r\n        return instance.put<ResponseDataType<GetProfileType>>(`profile`, profile).then(response => response.data)\r\n    },\r\n    savePhoto(filePhoto: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", filePhoto);\r\n        return instance.put<ResponseDataType<PhotosType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        }).then(response => response.data)\r\n    },\r\n};","import { FormAction, stopSubmit } from \"redux-form\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { InferActionsType, RootState } from \"./store\";\r\nexport type PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\nexport type ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\nexport type GetProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  photos: PhotosType\r\n  aboutMe:string\r\n\r\n}\r\n\r\nconst initialState = {\r\n  profile: null as GetProfileType | null,\r\n  status: \"\"\r\n};\r\ntype InitialStateType = typeof initialState\r\nconst profileReducer = (state = initialState, action: ProfileActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET_USER_PROFILE':\r\n      return { ...state, profile: action.payload };\r\n    case 'SET_STATUS':\r\n      return { ...state, status: action.payload };\r\n    case 'SAVE_PHOTO_SUCCESS':\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.payload } as GetProfileType,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype ProfileActionType = InferActionsType<typeof actions>\r\n\r\nconst actions = {\r\n  setUserProfile: (profile: GetProfileType) => ({ type: 'SET_USER_PROFILE', payload: profile } as const),\r\n  setStatus: (status: string) => ({ type: 'SET_STATUS', payload: status } as const),\r\n  savePhotoSuccess: (photos: PhotosType) => ({ type: 'SAVE_PHOTO_SUCCESS', payload: photos } as const)\r\n}\r\n\r\n\r\ntype ThunkProfileType = ThunkAction<Promise<void>, RootState, unknown, ProfileActionType | FormAction>\r\nexport const getUserProfile = (userId: number): ThunkProfileType => async (dispatch) => {\r\n  const data = await profileAPI.getProfile(userId);\r\n  dispatch(actions.setUserProfile(data));\r\n};\r\nexport const getUserStatus = (userId: number): ThunkProfileType => async (dispatch) => {\r\n  const status = await profileAPI.getStatus(userId);\r\n  dispatch(actions.setStatus(status));\r\n};\r\nexport const updateUserStatus = (status: string): ThunkProfileType => async (dispatch) => {\r\n  const data = await profileAPI.updateStatus(status);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.setStatus(status));\r\n  }\r\n};\r\nexport const savePhoto = (file: File): ThunkProfileType => async (dispatch) => {\r\n  const data = await profileAPI.savePhoto(file);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.savePhotoSuccess(data.data));\r\n  }\r\n};\r\nexport const saveProfile = (profile: GetProfileType): ThunkProfileType => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  const data = await profileAPI.saveProfile(profile);\r\n  if (data.resultCode === 0) {\r\n    if (userId != null) {\r\n      dispatch(getUserProfile(userId));\r\n    } else {\r\n      throw new Error('userId can not be null')\r\n    }\r\n  } else {\r\n    dispatch(stopSubmit(\"profile-data\", { _error: data.messages[0] }));\r\n    return Promise.reject(data.messages[0]);\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import React, { ComponentType } from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport \"./profile.css\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  GetProfileType,\r\n} from \"../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType ={\r\n  getUserProfile:(usrId:number)=>void\r\n  getUserStatus: (usrId: number)=>void\r\n  updateUserStatus:(status:string)=>void\r\n  savePhoto:(file:File)=>void\r\n  saveProfile: (profile: GetProfileType) => Promise<GetProfileType>\r\n}\r\ntype PathParamType={\r\n  userId:string\r\n}\r\ntype PropsType = MapStatePropsType & DispatchPropsType& RouteComponentProps<PathParamType>\r\nclass Profile extends React.Component<PropsType> {\r\n  profileRefresh = () => {\r\n    let userId:number | null = +this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId as number);\r\n    this.props.getUserStatus(userId as number);\r\n  };\r\n  componentDidMount() {\r\n    this.profileRefresh();\r\n  }\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.profileRefresh();\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      profile,\r\n      match,\r\n      savePhoto,\r\n      saveProfile,\r\n      status,\r\n      updateUserStatus,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <ProfileInfo \r\n          profile={profile}\r\n          isOwner={!match.params.userId}\r\n          savePhoto={savePhoto}\r\n          saveProfile={saveProfile}\r\n          status={status}\r\n          updateUserStatus={updateUserStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:RootState) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose<ComponentType>(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  })\r\n)(Profile);\r\n","import React from \"react\";\r\nimport { FC } from \"react\";\r\nimport \"./home.css\";\r\n\r\nconst Home:FC = () => {\r\n  return <div className=\"home\"></div>;\r\n};\r\n\r\nexport default Home;\r\n","import { instance, ResponseDataType } from \"./api\";\r\n\r\n\r\nexport type GetAuthDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\nexport type LoginType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthData() {\r\n        return instance.get<ResponseDataType<GetAuthDataType>>(`auth/me`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string) {\r\n        return instance\r\n            .post<ResponseDataType<LoginType>>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/login`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n};","import { instance } from \"./api\";\r\n\r\ntype GetCaptchaUrlType = {\r\n    url: string\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlType>(`security/get-captcha-url`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n};","import { InferActionsType, RootState } from './store';\r\nimport { FormAction, stopSubmit } from \"redux-form\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { authAPI } from \"../api/auth-api\";\r\nimport { securityAPI } from '../api/security-api';\r\n\r\n\r\n\r\ntype InitialStateType = {\r\n  userId: number | null\r\n  email: string | null\r\n  login: string | null\r\n  isAuth: boolean\r\n  captchaUrl: string | null\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action: AuthActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET_AUTH_USER_DATA':\r\n    case 'SET_CAPTCHA_URL':\r\n      return { ...state, ...action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype AuthActionType =  InferActionsType < typeof actions >\r\n\r\nconst actions={\r\n setUserAuthData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: 'SET_AUTH_USER_DATA',\r\n    payload: { userId, email, login, isAuth },\r\n  } as const),\r\n setCaptchaUrl: (captchaUrl: string) => ({\r\n  type: 'SET_CAPTCHA_URL',\r\n  payload: { captchaUrl },\r\n} as const)\r\n}\r\n\r\ntype ThunkAuthType = ThunkAction<Promise<void>, RootState, unknown, AuthActionType | FormAction>\r\nexport const getUserAuthData = (): ThunkAuthType => async (dispatch) => {\r\n  const data = await authAPI.getAuthData();\r\n  if (data.resultCode === 0) {\r\n    const { id, email, login } = data.data;\r\n    dispatch(actions.setUserAuthData(id, email, login, true));\r\n  }\r\n};\r\nexport const loginUser = (email: string, passward: string, rememberMe: boolean, captcha: string):\r\n ThunkAuthType => async (dispatch) => {\r\n  const data = await authAPI.login(email, passward, rememberMe, captcha);\r\n  if (data.resultCode === 0) {\r\n    dispatch(getUserAuthData());\r\n  } else {\r\n    if (data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\nexport const logOutUser = (): ThunkAuthType => async (dispatch) => {\r\n  const data = await authAPI.logOut();\r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.setUserAuthData(null, null, null, false));\r\n  }\r\n};\r\nexport const getCaptchaUrl = (): ThunkAuthType => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.url;\r\n  dispatch(actions.setCaptchaUrl(captchaUrl));\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport \"./login.css\";\r\nimport \"../formControl/field.css\";\r\nimport CreateField from \"../formControl/CreateField\";\r\nimport Button from \"../button/Button\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { maxLength, required, minLength } from \"../validators/validators\";\r\nimport {  useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser } from \"../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\n// type MapStateType={\r\n//   isAuth:boolean\r\n//   captchaUrl:string | null\r\n// }\r\n// type MapDispatchType={\r\n//   loginUser: (email: string, passward: string, rememberMe: boolean, captcha: string)=>void\r\n// }\r\ntype LoginValuesType={\r\n  email:string\r\n  password:string\r\n  rememberMe:boolean\r\n  captcha:string \r\n}\r\n\r\nconst Login: React.FC = () => {\r\nconst dispatch =useDispatch()\r\n  const { isAuth, captchaUrl}= useSelector((state:RootState)=>state.auth )\r\n\r\n  const submit = (values: LoginValuesType) => {\r\n    dispatch(loginUser(values.email, values.password, values.rememberMe, values.captcha));\r\n  };\r\n  if (isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={submit} captchaUrl={captchaUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Login\r\n\r\nconst maxLength25 = maxLength(25);\r\nconst minlength4 = minLength(4);\r\n\r\ntype LoginFormOwnType={\r\n  captchaUrl:string | null\r\n}\r\nconst LoginForm: React.FC<InjectedFormProps<LoginValuesType, LoginFormOwnType> \r\n& LoginFormOwnType> = ({ handleSubmit, captchaUrl, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <div className=\"form-block\">\r\n        <Field\r\n          name=\"email\"\r\n          component={CreateField}\r\n          type=\"email\"\r\n          validate={[required, maxLength25, minlength4]}\r\n          label=\"Email\"\r\n        />\r\n\r\n        <Field\r\n          name=\"password\"\r\n          component={CreateField}\r\n          type=\"password\"\r\n          validate={[required, maxLength25, minlength4]}\r\n          label=\"Password\"\r\n        />\r\n\r\n        <label htmlFor=\"rememberMe\">\r\n          <b>Remember me</b>\r\n        </label>\r\n        <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n\r\n        {captchaUrl && <img src={captchaUrl} alt=\"img\" />}\r\n        {captchaUrl && (\r\n          <Field component={CreateField} name=\"captcha\" label=\"Captcha\" />\r\n        )}\r\n\r\n        <div>\r\n          <Button disabled={false}  title=\"Submit\" />\r\n          <span>{error && <span className=\"error\">{error}</span>}</span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm<LoginValuesType, LoginFormOwnType>({\r\n  form: \"login\",\r\n})(LoginForm);\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { getUserAuthData } from \"./authReducer\";\r\nimport { InferActionsType, RootState } from \"./store\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  initialization: false,\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: SetInitializationActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'INITIALIZATION_SUCCESS':\r\n      return { ...state, initialization: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype SetInitializationActionType = InferActionsType<typeof actions>\r\n\r\n\r\nexport const actions = {\r\n  setInitialization: () => ( { type: 'INITIALIZATION_SUCCESS' } as const)\r\n}\r\n\r\n\r\ntype ThunkAppType = ThunkAction<Promise<void>, RootState, unknown, SetInitializationActionType>\r\nexport const initializationApp = (): ThunkAppType => async (dispatch) => {\r\n  const promise = await dispatch(getUserAuthData());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(actions.setInitialization());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","export default __webpack_public_path__ + \"static/media/react-redux.45917d58.png\";","import React, { FC } from \"react\";\r\nimport \"./header.css\";\r\nimport logo from \"./react-redux.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { logOutUser } from \"../redux/authReducer\";\r\n\r\n\r\n\r\nconst Header: FC = () => {\r\n const{isAuth, login}= useSelector((state:RootState)=>state.auth)\r\n \r\n const dispatch =useDispatch()\r\n  return (\r\n    <div className=\"header\">\r\n      <div>\r\n        <img src={logo} alt=\"img\" />\r\n      </div>\r\n      <h1>Social Network React</h1>\r\n      <div>\r\n        <div>\r\n          {isAuth ? <div>{login} <button onClick={dispatch(logOutUser)}>LogOut</button> </div>\r\n            : <div>\r\n              <NavLink to=\"/login\">\r\n                <button>Login</button>\r\n              </NavLink>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { GetUsersType, instance, ResponseDataType } from './api';\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string, friend:string) {\r\n        return instance\r\n            .get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === 'null' ? '' : `&friend=${friend}`))\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    },\r\n    following(userId: number) {\r\n        return instance.post<ResponseDataType>(`follow/${userId}`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n    unFollowing(userId: number) {\r\n        return instance.delete<ResponseDataType>(`follow/${userId}`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n};","import { ThunkAction } from \"redux-thunk\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { InferActionsType, RootState } from \"./store\";\r\n\r\n\r\nexport type UsersItemType = {\r\n  name: string\r\n  id: number\r\n  photos: {\r\n    small: string\r\n    large: string\r\n  }\r\n  status: string\r\n  followed: boolean\r\n}\r\n\r\nconst initialState = {\r\n  users: [] as Array<UsersItemType>,\r\n  pageSize: 90,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingProgress: [] as Array<number>,\r\n  filter:{\r\n    term:'',\r\n    friend:''\r\n  }\r\n};\r\ntype InitialState = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\n\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsUsersTypes): InitialState => {\r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.payload };\r\n    case 'FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.payload) {\r\n            return { ...user, followed: true };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    case 'UN_FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.payload) {\r\n            return { ...user, followed: false };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    case 'SET_TOTAL_USERS_COUNT':\r\n      return { ...state, totalUsersCount: action.payload };\r\n    case 'SET_CURRENT_PAGE':\r\n      return { ...state, currentPage: action.payload };\r\n    case 'TOGGLE_IS_FETCHING':\r\n      return { ...state, isFetching: action.payload };\r\n    case 'TOGGLE_FOLLOWING_PROGRESS':\r\n      return {\r\n        ...state,\r\n        followingProgress: action.isFetching\r\n          ? [...state.followingProgress, action.userId]\r\n          : state.followingProgress.filter((id) => id !== action.userId),\r\n      };\r\n    case 'SET_TERM':\r\n      return {...state, filter:action.payload}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype ActionsUsersTypes = InferActionsType<typeof actions>\r\n\r\nconst actions = {\r\n\r\n  setUsers: (users: Array<UsersItemType>) => ({ type: 'SET_USERS', payload: users } as const),\r\n  follow: (userId: number) => ({ type: 'FOLLOW', payload: userId } as const),\r\n  unFollow: (userId: number) => ({ type: 'UN_FOLLOW', payload: userId } as const),\r\n  setTotalUsersCount: (totalUsersCount: number) => ({ type: 'SET_TOTAL_USERS_COUNT', payload: totalUsersCount, } as const),\r\n  toggleFollowingProgress: (isFetching: boolean, userId: number) => ({ type: 'TOGGLE_FOLLOWING_PROGRESS', isFetching, userId } as const),\r\n  setCurrentPage: (currentPage: number) => ({ type: 'SET_CURRENT_PAGE', payload: currentPage } as const),\r\n  togleIsfetching: (isFetching: boolean) => ({ type: 'TOGGLE_IS_FETCHING', payload: isFetching } as const),\r\n  setFilter: (filter: FilterType ) => ({ type: 'SET_TERM', payload: filter} as const),\r\n\r\n}\r\n\r\n\r\n\r\ntype ThunkUsersType = ThunkAction<Promise<void>, RootState, unknown, ActionsUsersTypes>\r\nexport const getUsers = (currentPage: number, pageSize: number, filter: FilterType): ThunkUsersType => async (dispatch) => {\r\n  dispatch(actions.togleIsfetching(true));\r\n  dispatch(actions.setCurrentPage(currentPage));\r\n  dispatch(actions.setFilter(filter))\r\n\r\n  const data = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend);\r\n  dispatch(actions.togleIsfetching(false));\r\n  dispatch(actions.setTotalUsersCount(data.totalCount));\r\n  dispatch(actions.setUsers(data.items));\r\n};\r\n\r\nexport const followSuccess = (userId: number): ThunkUsersType => async (dispatch) => {\r\n  dispatch(actions.toggleFollowingProgress(true, userId));\r\n  const data = await usersAPI.following(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.follow(userId));\r\n  }\r\n  dispatch(actions.toggleFollowingProgress(false, userId));\r\n};\r\nexport const unFollowSuccess = (userId: number): ThunkUsersType => async (dispatch) => {\r\n  dispatch(actions.toggleFollowingProgress(true, userId));\r\n  const data = await usersAPI.unFollowing(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.unFollow(userId));\r\n  }\r\n  dispatch(actions.toggleFollowingProgress(false, userId));\r\n};\r\nexport default usersReducer;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport style from \"./paginator.module.css\";\r\nimport \"./users.css\";\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  onPageChange: (pageNumber: number) => void\r\n  currentPage: number\r\n  portionSize?: number\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = ({ totalUsersCount, pageSize, onPageChange, currentPage, portionSize = 26, }) => {\r\n  const pageCount = Math.ceil(totalUsersCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i < pageCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pageCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={style.paginator}>\r\n      {portionNumber > 1 && (\r\n        <Button\r\n          disabled={false}\r\n          onClick={() => setPortionNumber(portionNumber - 1)}\r\n          title=\"Prev\"\r\n        />\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              key={p}\r\n              onClick={() => onPageChange(p)}\r\n              className={currentPage === p ? style.page : \"\"}\r\n            >\r\n              <span className={style.pageNumber}>{p}</span>\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <Button\r\n          disabled={false}\r\n          onClick={() => setPortionNumber(portionNumber + 1)}\r\n          title=\"Next\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from \"../button/Button\";\r\nimport {  followSuccess, unFollowSuccess, UsersItemType } from \"../redux/usersReducer\";\r\nimport logo from \"./man-icon.png\";\r\nimport \"./users.css\";\r\n\r\ntype UserType = {\r\n  user:UsersItemType\r\n  followingProgress: Array<number>\r\n\r\n\r\n}\r\n\r\nconst User: React.FC<UserType> = ({ user, followingProgress}) => {\r\nconst dispatch =useDispatch()\r\n  return (\r\n    <div>\r\n      <div className=\"users-container\">  \r\n            <div  className=\"user\">\r\n              <div className=\"user-logo\">\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                  <img\r\n                    src={user.photos.large !== null ? user.photos.large : logo}\r\n                    alt=\"img\"\r\n                  />\r\n                </NavLink>\r\n              </div>\r\n              <div>\r\n                <h3>\r\n                  User Name: <span>{user.name}</span>\r\n                </h3>\r\n              </div>\r\n              <div>\r\n                {user.followed && (\r\n                  <Button\r\n                    title=\"UnFollow\"\r\n                    disabled={followingProgress.some(\r\n                      (userId) => userId === user.id\r\n                    )}\r\n                onClick={() => dispatch(unFollowSuccess(user.id))}\r\n                  />\r\n                )}\r\n                {!user.followed && (\r\n                  <Button\r\n                    title=\"Follow\"\r\n                    disabled={followingProgress.some(\r\n                      (userId) => userId === user.id\r\n                    )}\r\n                onClick={() => dispatch(followSuccess(user.id))}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { FC } from 'react';\r\nimport { FilterType } from '../redux/usersReducer';\r\nimport { Field, Form, Formik } from \"formik\";\r\n\r\n\r\nexport type FilterPropsType = {\r\n    onFilterChange: (filter: FilterType) => void\r\n\r\n}\r\n\r\n\r\nconst UsersSearchForm: FC<FilterPropsType> = (props) => {\r\n    return <div>\r\n        <Formik\r\n            initialValues={{ term: '', friend: '' }}\r\n            validate={values => {\r\n                const errors = {}\r\n                return errors;\r\n            }}\r\n            onSubmit={(values: FilterType, { setSubmitting }) => {\r\n                props.onFilterChange(values)\r\n                setSubmitting(false)\r\n\r\n            }}\r\n        >\r\n\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeholder='search' />\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unFollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Search\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n}\r\n\r\nexport default UsersSearchForm;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Preloader from '../preloader/Preloader';\r\nimport { RootState } from '../redux/store';\r\nimport { FilterType, getUsers } from '../redux/usersReducer';\r\nimport Pagination from './Pagination';\r\nimport User from './User';\r\nimport UsersSearchForm from './UsersSearchForm';\r\n// const queryString = require('query-string');\r\n\r\nconst UsersHook: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isFetching = useSelector((state: RootState) => state.usersPage.isFetching)\r\n    const users = useSelector((state: RootState) => state.usersPage.users)\r\n    const currentPage = useSelector((state: RootState) => state.usersPage.currentPage)\r\n    const pageSize = useSelector((state: RootState) => state.usersPage.pageSize)\r\n    const filter = useSelector((state: RootState) => state.usersPage.filter)\r\n    const totalUsersCount = useSelector((state: RootState) => state.usersPage.totalUsersCount)\r\n    const followingProgress = useSelector((state: RootState) => state.usersPage.followingProgress)\r\n\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        dispatch(getUsers(currentPage, pageSize, filter))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    useEffect(() => {\r\n        history.push({\r\n            pathname:'/users',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n    }, [filter, currentPage, history]);\r\n\r\n\r\n\r\n    const onPageChange = (pageNumber: number) => {\r\n        dispatch(getUsers(pageNumber, pageSize, filter))\r\n    };\r\n\r\n    const onFilterChange = (filter: FilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n\r\n    }\r\n    return <div>\r\n        {isFetching ? <Preloader /> : null}\r\n        <UsersSearchForm onFilterChange={onFilterChange} />\r\n\r\n        <div>\r\n\r\n            <div className=\"pagination\">\r\n                <Pagination\r\n                    onPageChange={onPageChange}\r\n                    totalUsersCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    currentPage={currentPage}\r\n                />\r\n            </div>\r\n\r\n            {users.map((u) => <User\r\n                key={u.id}\r\n                user={u}\r\n                followingProgress={followingProgress}\r\n            />)}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default UsersHook;\r\n","import React, { FC, useEffect, useState } from 'react';\r\n\r\ntype ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nconst Chat: FC = () => {\r\n    return <div> <ChatContainer /></div>;\r\n};\r\nexport default Chat\r\n\r\n\r\nconst ChatContainer: FC = () => {\r\n    const [ws, setWs] = useState<WebSocket | null>(null)\r\n    useEffect(() => {\r\n        let wsChanel: WebSocket\r\n        const handlerWs = () => {\r\n            console.log('Close chanel')\r\n            setTimeout(CreateChanel, 3000)\r\n        }\r\n        const CreateChanel = () => {\r\n            wsChanel?.addEventListener('close', handlerWs)\r\n            wsChanel?.close()\r\n            wsChanel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n            wsChanel?.addEventListener('close', handlerWs)\r\n            setWs(wsChanel)\r\n\r\n        }\r\n        CreateChanel()\r\n        return () => {\r\n            wsChanel?.removeEventListener('close', handlerWs)\r\n            wsChanel.close()\r\n        }\r\n    }, []);\r\n\r\n    return <div>\r\n        <Messages ws={ws} />\r\n        <AddMessageChat ws={ws} />\r\n    </div>;\r\n};\r\n\r\n\r\nconst Messages: FC<{ ws: WebSocket | null }> = ({ ws }) => {\r\n    const [wsData, setWsData] = useState<ChatMessageType[]>([]);\r\n\r\n    useEffect(() => {\r\n        const messageHandler=(e:MessageEvent)=>{\r\n            let newData = JSON.parse(e.data)\r\n            setWsData((prevData) => [...prevData, ...newData]);\r\n        }\r\n        ws?.addEventListener('message', messageHandler )\r\n        return ()=>{\r\n            ws?.removeEventListener('message', messageHandler)\r\n\r\n        }\r\n    }, [ws]);\r\n\r\n    return <div style={{ height: '300px', overflow: 'auto', padding: '15px' }}>\r\n        {wsData.map((m, i) => <Message key={i} message={m} />)}\r\n\r\n    </div>;\r\n};\r\n\r\nconst Message: FC<{ message: ChatMessageType }> = ({ message }) => {\r\n\r\n    return <div>\r\n        <img src={message.photo} alt=\"/\" style={{ width: '50px' }} />\r\n        <b>{message.userName}</b>\r\n        <div>\r\n            <b>{message.message}</b>\r\n        </div>\r\n        <hr />\r\n    </div>;\r\n};\r\n\r\nconst AddMessageChat: FC<{ ws: WebSocket | null }> = ({ ws }) => {\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'ready' | 'padding'>('padding')\r\n\r\n    useEffect(() => {\r\n        const openHandler=()=>{\r\n            setReadyStatus('ready')\r\n        }\r\n        ws?.addEventListener('open', openHandler )\r\n\r\n        return () => {\r\n            ws?.removeEventListener('open', openHandler)\r\n        }\r\n    }, [ws]);\r\n\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        ws?.send(message)\r\n        setMessage('')\r\n    }\r\n    return <div style={{ padding: '15px' }}>\r\n        <div>\r\n            <textarea onChange={e => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n        </div>\r\n        <div>\r\n            <button disabled={ws === null || readyStatus !== 'ready'} onClick={sendMessage}>Send Message</button>\r\n        </div>\r\n    </div>;\r\n};\r\n","import React, { ComponentType } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"../navbar/Navbar\";\nimport Profile from \"../profile/Profile\";\nimport Home from \"../home/Home\";\nimport Login from \"../login/Login\";\nimport Preloader from \"../preloader/Preloader\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { initializationApp } from \"../redux/appReducer\";\nimport { compose } from \"redux\";\nimport { RootState } from \"../redux/store\";\nimport Header from \"../header/Header\";\nimport UsersHook from \"../users/UsersHook\";\nimport Chat from \"../chat/Chat\";\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType ={\n  initializationApp:()=>void\n}\nclass App extends React.Component<MapStatePropsType & DispatchPropsType> {\n  componentDidMount() {\n    this.props.initializationApp();\n  }\n  render() {\n    if (!this.props.initializationApp) {\n      return <Preloader />;\n    }\n    return (\n      <div className=\"app\">\n        <div>\n          <Header/>\n          <Navbar />\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/users\" component={UsersHook} />\n          <Route path=\"/chat\" component={Chat} />\n          <Route path=\"/profile/:userId?\" component={Profile} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state:RootState) => {\n  return { initialization: state.app.initialization };\n};\nexport default compose<ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializationApp })\n)(App);\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  usersPage: usersReducer,\r\n  profilePage: profileReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\n\r\nexport type InferActionsType<T> = T extends { [keys: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    //@ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/app/App\";\nimport store from \"./components/redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"paginator_pageNumber__2M_5j\",\"page\":\"paginator_page__2CQ8A\",\"paginator\":\"paginator_paginator__2YtPx\"};"],"sourceRoot":""}